service: dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-south-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.postsTableName}

custom:
  postsTableName: posts-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  getPost:
    handler: api.getPost
    name: get-post
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - http:
          path: post/{postId}
          method: GET
    iamRoleStatements: # Corrected property name
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.postsTableName}"
  createPost:
    handler: api.createPost
    name: create-post
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements: # Corrected property name
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.postsTableName}"
  updatePost:
    handler: api.createPost
    name: update-post
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - http:
          path: post/{postId}
          method: PUT
    iamRoleStatements: # Corrected property name
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.postsTableName}"
  deletePost:
    handler: api.deletePost
    name: delete-post # Corrected function name
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - http:
          path: post/{postId}
          method: DELETE
    iamRoleStatements: # Corrected property name
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.postsTableName}"
  getAllPosts:
    handler: api.getAllPosts
    name: get-all-posts # Corrected function name
    memorySize: 128 #mb
    timeout: 5 #seconds
    events:
      - http:
          path: posts
          method: GET
    iamRoleStatements: # Corrected property name
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.postsTableName}"

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.postsTableName}
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
